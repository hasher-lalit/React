{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightForecast.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Clock from \"../../images/alarm_clock.svg\";\nimport CreateGraph from \"./CreateGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RightForecast(props) {\n  _s();\n\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const [dailyWeather, setWeather] = useState([]);\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=hourly,minutely,alerts&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`).then(response => {\n      let dailyData = response.data.daily;\n      let tempDaily = [];\n\n      for (let i = 1; i < dailyData.length; i++) {\n        tempDaily.push({\n          minTemp: dailyData[i].temp.min,\n          maxTemp: dailyData[i].temp.max,\n          day: days[new Date(dailyData[i].dt * 1000).getDay()]\n        });\n      }\n\n      setWeather(tempDaily);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HeaderTitle\",\n      children: \"Week's Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSideBottom\",\n      children: [dailyWeather.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RightCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayTitle\",\n          children: day.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rclockImgCard\",\n          src: Clock,\n          alt: \"Clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tempHistory\",\n          children: [Math.round(day.minTemp + day.maxTemp) / 2, \"`C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunDesc\",\n            children: \"Max \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunTime\",\n            children: [Math.round(day.maxTemp), \"`C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunDesc\",\n            children: \"Min \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunTime\",\n            children: [Math.round(day.minTemp), \"`C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, day.day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(CreateGraph, {\n        data: dailyWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RightForecast, \"4pnvnFYpKdhx6lIBHMwJ4AsIlBo=\");\n\n_c = RightForecast;\nexport default RightForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightForecast\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightForecast.tsx"],"names":["axios","React","useEffect","useState","CreateGraph","RightForecast","props","days","dailyWeather","setWeather","get","lat","lon","then","response","dailyData","data","daily","tempDaily","i","length","push","minTemp","temp","min","maxTemp","max","day","Date","dt","getDay","catch","error","console","log","map","Clock","Math","round"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Clock from \"../../images/alarm_clock.svg\";\nimport { RightViewForecast } from \"../Home/CityDTO\";\nimport CreateGraph from \"./CreateGraph\";\n\nfunction RightForecast(props: any) {\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const [dailyWeather, setWeather] = useState<RightViewForecast[]>([]);\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=hourly,minutely,alerts&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`\n      )\n      .then((response) => {\n        let dailyData = response.data.daily;\n        let tempDaily: RightViewForecast[] = [];\n        for (let i = 1; i < dailyData.length; i++) {\n          tempDaily.push({\n            minTemp: dailyData[i].temp.min,\n            maxTemp: dailyData[i].temp.max,\n            day: days[new Date(dailyData[i].dt * 1000).getDay()],\n          });\n        }\n        setWeather(tempDaily);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <>\n      <div className=\"HeaderTitle\">Week's Forecast</div>\n      <div className=\"RightSideBottom\">\n        {dailyWeather.map((day) => (\n          <div key={day.day} className=\"RightCard\">\n            <div className=\"dayTitle\">{day.day}</div>\n            <img className=\"rclockImgCard\" src={Clock} alt=\"Clock\" />\n            <div className=\"tempHistory\">{Math.round(day.minTemp + day.maxTemp) / 2}`C</div>\n            <div>\n              <p className=\"sunDesc\">Max </p>{\" \"}\n              <p className=\"sunTime\">{Math.round(day.maxTemp)}`C</p>\n            </div>\n            <div>\n              <p className=\"sunDesc\">Min </p>\n              <p className=\"sunTime\">{Math.round(day.minTemp)}`C</p>\n            </div>\n          </div>\n        ))}\n        <CreateGraph data={dailyWeather} />\n      </div>\n    </>\n  );\n}\nexport default RightForecast;\n"]},"metadata":{},"sourceType":"module"}
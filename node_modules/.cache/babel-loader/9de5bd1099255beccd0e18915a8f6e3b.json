{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Home/HomeLower.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CityCard from \"./CityCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomeLower() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    // eslint-disable-next-line eqeqeq\n    const list = [...imagesAvailable.filter(i => i.region.find(j => j == currentRegion) == currentRegion)];\n    setRegionImages(list);\n    console.log(formData);\n  }, [currentRegion, imagesAvailable, formData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchCity\",\n      type: \"text\",\n      placeholder: \"Enter your City Name\",\n      onChange: event => setSearch(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cities.map(city => city != null ? /*#__PURE__*/_jsxDEV(CityCard, {\n        city: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeLower, \"tpwOijwTDibUd5oA6Rxec5QxzZg=\");\n\n_c = HomeLower;\nexport default HomeLower;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeLower\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Home/HomeLower.tsx"],"names":["React","useState","useEffect","CityCard","HomeLower","cities","setCities","search","setSearch","list","imagesAvailable","filter","i","region","find","j","currentRegion","setRegionImages","console","log","formData","event","target","value","map","city"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AASA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,EAAT,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAS,EAAT,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,IAAY,GAAC,CAAC,GAAGC,eAAe,CAACC,MAAhB,CAAwBC,CAAD,IAAKA,CAAC,CAACC,MAAF,CAASC,IAAT,CAAcC,CAAC,IAAEA,CAAC,IAAEC,aAApB,KAAoCA,aAAhE,CAAJ,CAAnB;AACAC,IAAAA,eAAe,CAACR,IAAD,CAAf;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,GALQ,EAKN,CAACJ,aAAD,EAAeN,eAAf,EAA+BU,QAA/B,CALM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,sBAHd;AAIE,MAAA,QAAQ,EAAGC,KAAD,IAAWb,SAAS,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,gBACGlB,MAAM,CAACmB,GAAP,CAAYC,IAAD,IACVA,IAAI,IAAI,IAAR,gBAAe,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAf,GAAmD,IADpD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzBQrB,S;;KAAAA,S;AA2BT,eAAeA,SAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport CityCard from \"./CityCard\";\nexport interface City {\n  name: string;\n  longitude: number;\n  latitude: number;\n  temperature: number;\n  title: string;\n  timestamp: Date;\n}\nfunction HomeLower() {\n  const [cities, setCities] = useState<City[]>([]);\n  const [search, setSearch] = useState<string>(\"\");\n  useEffect(() => {\n    // eslint-disable-next-line eqeqeq\n    const list:Image[]=[...imagesAvailable.filter((i)=>i.region.find(j=>j==currentRegion)==currentRegion)];\n    setRegionImages(list);\n    console.log(formData)\n  }, [currentRegion,imagesAvailable,formData]);\n  return (\n    <div className=\"\">\n      <h2>Weather App</h2>\n      <input\n        id=\"searchCity\"\n        type=\"text\"\n        placeholder=\"Enter your City Name\"\n        onChange={(event) => setSearch(event.target.value)}\n      ></input>\n      <div>\n        {cities.map((city: City) =>\n          city != null ? <CityCard city={city}></CityCard> : null\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default HomeLower;\n"]},"metadata":{},"sourceType":"module"}
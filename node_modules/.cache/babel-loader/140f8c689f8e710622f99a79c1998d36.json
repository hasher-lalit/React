{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightForecast.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Clock from \"../../images/clock.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// export interface RightViewForecast {\n//     minTemp: number;\n//     maxTemp: number;\n//     day: Date;\n//   }\nfunction RightForecast(props) {\n  _s();\n\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const [dailyWeather, setWeather] = useState([]);\n  console.log(\"forecast\");\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=hourly,minutely,alerts&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`).then(response => {\n      let dailyData = response.data.daily;\n      let tempDaily = [];\n\n      for (let i = 1; i < dailyData.length; i++) {\n        //   console.log(new Date(dailyData[i].dt * 1000).getDay());\n        tempDaily.push({\n          minTemp: dailyData[i].temp.min,\n          maxTemp: dailyData[i].temp.max,\n          day: days[new Date(dailyData[i].dt * 1000).getDay()]\n        });\n      }\n\n      setWeather(tempDaily);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dailyWeather.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: day.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"lclockImgCard\",\n        src: Clock,\n        alt: \"Clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Min Temp \", day.minTemp, \"`C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Max Temp\", day.maxTemp, \"`C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, day.day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RightForecast, \"4pnvnFYpKdhx6lIBHMwJ4AsIlBo=\");\n\n_c = RightForecast;\nexport default RightForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightForecast\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightForecast.tsx"],"names":["axios","React","useEffect","useState","RightForecast","props","days","dailyWeather","setWeather","console","log","get","lat","lon","then","response","dailyData","data","daily","tempDaily","i","length","push","minTemp","temp","min","maxTemp","max","day","Date","dt","getDay","catch","error","map","Clock"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAMA;AACA;AACA;AACA;AACA;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAAA;;AACjC,MAAIC,IAAI,GAAG,CACT,QADS,EAET,QAFS,EAGT,SAHS,EAIT,WAJS,EAKT,UALS,EAMT,QANS,EAOT,UAPS,CAAX;AASA,QAAM,CAACC,YAAD,EAAeC,UAAf,IAA6BL,QAAQ,CAAsB,EAAtB,CAA3C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CACFW,GADH,CAEK,uDAAsDN,KAAK,CAACO,GAAI,QAAOP,KAAK,CAACQ,GAAI,qFAFtF,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,UAAIC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAA9B;AACA,UAAIC,SAA8B,GAAG,EAArC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC3C;AACED,QAAAA,SAAS,CAACG,IAAV,CAAe;AACbC,UAAAA,OAAO,EAAEP,SAAS,CAACI,CAAD,CAAT,CAAaI,IAAb,CAAkBC,GADd;AAEbC,UAAAA,OAAO,EAAEV,SAAS,CAACI,CAAD,CAAT,CAAaI,IAAb,CAAkBG,GAFd;AAGbC,UAAAA,GAAG,EAAEtB,IAAI,CAAC,IAAIuB,IAAJ,CAASb,SAAS,CAACI,CAAD,CAAT,CAAaU,EAAb,GAAkB,IAA3B,EAAiCC,MAAjC,EAAD;AAHI,SAAf;AAKD;;AACDvB,MAAAA,UAAU,CAACW,SAAD,CAAV;AACD,KAhBH,EAiBGa,KAjBH,CAiBUC,KAAD,IAAWxB,OAAO,CAACC,GAAR,CAAYuB,KAAZ,CAjBpB;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAoBA,sBACE;AAAA,cACG1B,YAAY,CAAC2B,GAAb,CAAkBN,GAAD,iBAChB;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA,8BACE;AAAA,kBAAMA,GAAG,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAEO,KAApC;AAA2C,QAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCAAeP,GAAG,CAACL,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,+BAAcK,GAAG,CAACF,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAUE,GAAG,CAACA,GAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA5CQxB,a;;KAAAA,a;AA6CT,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Detail from \"../Detail/Detail\";\nimport Clock from \"../../images/clock.svg\";\nimport { RightViewForecast } from \"../Home/CityDTO\";\n\n// export interface RightViewForecast {\n//     minTemp: number;\n//     maxTemp: number;\n//     day: Date;\n//   }\n\nfunction RightForecast(props: any) {\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const [dailyWeather, setWeather] = useState<RightViewForecast[]>([]);\n  console.log(\"forecast\");\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=hourly,minutely,alerts&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`\n      )\n      .then((response) => {\n        let dailyData = response.data.daily;\n        let tempDaily: RightViewForecast[] = [];\n        for (let i = 1; i < dailyData.length; i++) {\n        //   console.log(new Date(dailyData[i].dt * 1000).getDay());\n          tempDaily.push({\n            minTemp: dailyData[i].temp.min,\n            maxTemp: dailyData[i].temp.max,\n            day: days[new Date(dailyData[i].dt * 1000).getDay()],\n          });\n        }\n        setWeather(tempDaily);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <div>\n      {dailyWeather.map((day) => (\n        <div key={day.day} className=\"RightCard\">\n          <div>{day.day}</div>\n          <img className=\"lclockImgCard\" src={Clock} alt=\"Clock\" />\n          <div>Min Temp {day.minTemp}`C</div>\n          <div>Max Temp{day.maxTemp}`C</div>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default RightForecast;\n"]},"metadata":{},"sourceType":"module"}
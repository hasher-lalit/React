{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Home/HomeLower.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CityCard from \"./CityCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// function filterFunction() {\n//   var input, filter, ul, li, a, i;\n//   input = document.getElementById(\"myInput\");\n//   filter = input.value.toUpperCase();\n//   div = document.getElementById(\"myDropdown\");\n//   a = div.getElementsByTagName(\"a\");\n//   for (i = 0; i < a.length; i++) {\n//     txtValue = a[i].textContent || a[i].innerText;\n//     if (txtValue.toUpperCase().indexOf(filter) > -1) {\n//       a[i].style.display = \"\";\n//     } else {\n//       a[i].style.display = \"none\";\n//     }\n//   }\n// }\nfunction HomeLower() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    var filter;\n    console.log(\"Searching for \" + search);\n    console.log(require(\"indian-cities-json\"));\n    filter = search.toUpperCase();\n    let div = document.getElementById(\"myDropdown\");\n    a = div.getElementsByTagName(\"a\");\n\n    for (i = 0; i < a.length; i++) {\n      txtValue = a[i].textContent || a[i].innerText;\n\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        a[i].style.display = \"\";\n      } else {\n        a[i].style.display = \"none\";\n      }\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myDropdown\",\n      className: \"dropdown-content\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myInput\",\n        type: \"text\",\n        placeholder: \"Enter your City Name\",\n        onChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cities.map(city => city != null ? /*#__PURE__*/_jsxDEV(CityCard, {\n        city: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeLower, \"tpwOijwTDibUd5oA6Rxec5QxzZg=\");\n\n_c = HomeLower;\nexport default HomeLower;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeLower\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Home/HomeLower.tsx"],"names":["React","useState","useEffect","CityCard","HomeLower","cities","setCities","search","setSearch","filter","console","log","require","toUpperCase","div","document","getElementById","a","getElementsByTagName","i","length","txtValue","textContent","innerText","indexOf","style","display","event","target","value","map","city"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,EAAT,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAS,EAAT,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBJ,MAA/B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAAC,oBAAD,CAAnB;AACAH,IAAAA,MAAM,GAAGF,MAAM,CAACM,WAAP,EAAT;AACA,QAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAV;AACAC,IAAAA,CAAC,GAAGH,GAAG,CAACI,oBAAJ,CAAyB,GAAzB,CAAJ;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,CAAC,CAACG,MAAlB,EAA0BD,CAAC,EAA3B,EAA+B;AAC7BE,MAAAA,QAAQ,GAAGJ,CAAC,CAACE,CAAD,CAAD,CAAKG,WAAL,IAAoBL,CAAC,CAACE,CAAD,CAAD,CAAKI,SAApC;;AACA,UAAIF,QAAQ,CAACR,WAAT,GAAuBW,OAAvB,CAA+Bf,MAA/B,IAAyC,CAAC,CAA9C,EAAiD;AAC/CQ,QAAAA,CAAC,CAACE,CAAD,CAAD,CAAKM,KAAL,CAAWC,OAAX,GAAqB,EAArB;AACD,OAFD,MAEO;AACLT,QAAAA,CAAC,CAACE,CAAD,CAAD,CAAKM,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACD;AACF;AACF,GAfQ,EAeN,CAACnB,MAAD,CAfM,CAAT;AAgBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,sBAHd;AAIE,QAAA,QAAQ,EAAGoB,KAAD,IAAWnB,SAAS,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA,gBACGxB,MAAM,CAACyB,GAAP,CAAYC,IAAD,IACVA,IAAI,IAAI,IAAR,gBAAe,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAf,GAAmD,IADpD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAtCQ3B,S;;KAAAA,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CityCard from \"./CityCard\";\nexport interface City {\n  name: string;\n  longitude: number;\n  latitude: number;\n  temperature: number;\n  title: string;\n  timestamp: Date;\n}\n// function filterFunction() {\n//   var input, filter, ul, li, a, i;\n//   input = document.getElementById(\"myInput\");\n//   filter = input.value.toUpperCase();\n//   div = document.getElementById(\"myDropdown\");\n//   a = div.getElementsByTagName(\"a\");\n//   for (i = 0; i < a.length; i++) {\n//     txtValue = a[i].textContent || a[i].innerText;\n//     if (txtValue.toUpperCase().indexOf(filter) > -1) {\n//       a[i].style.display = \"\";\n//     } else {\n//       a[i].style.display = \"none\";\n//     }\n//   }\n// }\nfunction HomeLower() {\n  const [cities, setCities] = useState<City[]>([]);\n  const [search, setSearch] = useState<string>(\"\");\n\n  useEffect(() => {\n    var filter:string;\n    console.log(\"Searching for \" + search);\n    console.log(require(\"indian-cities-json\"));\n    filter = search.toUpperCase();\n    let div = document.getElementById(\"myDropdown\");\n    a = div.getElementsByTagName(\"a\");\n    for (i = 0; i < a.length; i++) {\n      txtValue = a[i].textContent || a[i].innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        a[i].style.display = \"\";\n      } else {\n        a[i].style.display = \"none\";\n      }\n    }\n  }, [search]);\n  return (\n    <div>\n      <h2>Weather App</h2>\n      <div id=\"myDropdown\" className=\"dropdown-content\">\n        <input\n          id=\"myInput\"\n          type=\"text\"\n          placeholder=\"Enter your City Name\"\n          onChange={(event) => setSearch(event.target.value)}\n        />\n      </div>\n      <div>\n        {cities.map((city: City) =>\n          city != null ? <CityCard city={city}></CityCard> : null\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default HomeLower;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Clock from \"../../images/clock.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RightHistory(props) {\n  _s();\n\n  const dateUnix = Math.round(new Date().getTime() / 1000);\n  const [history, setHistory] = useState([]);\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  useEffect(() => {\n    tempFun();\n\n    async function tempFun() {\n      for (let i = 1; i <= 5; i++) {\n        await axios.get(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${props.lat}&lon=${props.lon}&dt=${dateUnix - 10 - i * 86400}&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`).then(response => {\n          let THistory = response.data.current;\n          setHistory(history => [...history, {\n            sunriseTime: formatTime(THistory.sunrise),\n            sunsetTime: formatTime(THistory.sunset),\n            temperature: THistory.temp,\n            day: days[new Date(THistory.dt * 1000).getDay()]\n          }]);\n        }).catch(error => console.log(error));\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HeaderTitle\",\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSideBottom\",\n      children: history.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RightCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayTitle\",\n          children: day.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rclockImgCard\",\n          src: Clock,\n          alt: \"Clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tempHistory\",\n          children: day.temperature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunDesc\",\n            children: \"Sunrise \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunTime\",\n            children: day.sunriseTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunDesc\",\n            children: \"Sunset \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sunTime\",\n            children: day.sunsetTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, day.day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RightHistory, \"PUqjgfw0ccPwtx6QxD6fWqJYeMQ=\");\n\n_c = RightHistory;\n\nfunction formatTime(newDate) {\n  var date = new Date(newDate * 1000);\n  var hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\n  var ampm = date.getHours() > 12 ? \" pm\" : \" am\";\n  var minutes = \"0\" + date.getMinutes();\n  return hours + \":\" + minutes.substr(-2) + ampm;\n}\n\nexport default RightHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightHistory\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightHistory.tsx"],"names":["axios","React","useEffect","useState","RightHistory","props","dateUnix","Math","round","Date","getTime","history","setHistory","days","tempFun","i","get","lat","lon","then","response","THistory","data","current","sunriseTime","formatTime","sunrise","sunsetTime","sunset","temperature","temp","day","dt","getDay","catch","error","console","log","map","Clock","newDate","date","hours","getHours","ampm","minutes","getMinutes","substr"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Detail from \"../Detail/Detail\";\nimport Clock from \"../../images/clock.svg\";\nimport { RightViewForecast, RightViewHistory } from \"../Home/CityDTO\";\nfunction RightHistory(props: any) {\n  const dateUnix = Math.round(new Date().getTime() / 1000);\n  const [history, setHistory] = useState<RightViewHistory[]>([]);\n  var days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  useEffect(() => {\n    tempFun();\n    async function tempFun() {\n      for (let i = 1; i <= 5; i++) {\n        await axios\n          .get(\n            `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${\n              props.lat\n            }&lon=${props.lon}&dt=${\n              dateUnix - 10 - i * 86400\n            }&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`\n          )\n          .then((response) => {\n            let THistory = response.data.current;\n            setHistory((history) => [\n              ...history,\n              {\n                sunriseTime: formatTime(THistory.sunrise),\n                sunsetTime: formatTime(THistory.sunset),\n                temperature: THistory.temp,\n                day: days[new Date(THistory.dt * 1000).getDay()],\n              },\n            ]);\n          })\n          .catch((error) => console.log(error));\n      }\n    }\n  }, []);\n  return (\n    <>\n      <div className=\"HeaderTitle\">History</div>\n      <div className=\"RightSideBottom\">\n        {history.map((day) => (\n          <div key={day.day} className=\"RightCard\">\n            <div className=\"dayTitle\">{day.day}</div>\n            <img className=\"rclockImgCard\" src={Clock} alt=\"Clock\" />\n            <div className=\"tempHistory\">{day.temperature}</div>\n            <div>\n              <p className=\"sunDesc\">Sunrise </p>{\" \"}\n              <p className=\"sunTime\">{day.sunriseTime}</p>\n            </div>\n            <div>\n              <p className=\"sunDesc\">Sunset </p>\n              <p className=\"sunTime\">{day.sunsetTime}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nfunction formatTime(newDate: number) {\n  var date = new Date(newDate * 1000);\n  var hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\n  var ampm = date.getHours() > 12 ? \" pm\" : \" am\";\n  var minutes = \"0\" + date.getMinutes();\n  return hours + \":\" + minutes.substr(-2) + ampm;\n}\nexport default RightHistory;\n"]},"metadata":{},"sourceType":"module"}
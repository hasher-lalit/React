{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightForecast.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// export interface RightViewForecast {\n//     minTemp: number;\n//     maxTemp: number;\n//     day: Date;\n//   }\nfunction RightForecast(props) {\n  _s();\n\n  const [dailyWeather, setWeather] = useState([]);\n  console.log(\"forecast\");\n  useEffect(() => {\n    console.log(\"use effect called\");\n    axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=hourly,minutely,alerts&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`).then(response => {\n      console.log(response);\n      let dailyData = response.data.daily;\n\n      for (let i = 0; i < dailyData.length; i++) {\n        setWeather([...dailyWeather, {\n          minTemp: dailyData[i].temp.min,\n          maxTemp: dailyData[i].temp.max,\n          day: new Date(dailyData[i].dt).getDay()\n        }]);\n      }\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dailyWeather.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: day.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day.minTemp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day.maxTemp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, day.day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RightForecast, \"4pnvnFYpKdhx6lIBHMwJ4AsIlBo=\");\n\n_c = RightForecast;\nexport default RightForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightForecast\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/RightForecast.tsx"],"names":["axios","React","useEffect","useState","RightForecast","props","dailyWeather","setWeather","console","log","get","lat","lon","then","response","dailyData","data","daily","i","length","minTemp","temp","min","maxTemp","max","day","Date","dt","getDay","catch","error","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAMA;AACA;AACA;AACA;AACA;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAAA;;AACjC,QAAM,CAACC,YAAD,EAAeC,UAAf,IAA6BJ,QAAQ,CAAsB,EAAtB,CAA3C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,IAAAA,KAAK,CACFU,GADH,CAEK,uDAAsDL,KAAK,CAACM,GAAI,QAAON,KAAK,CAACO,GAAI,qFAFtF,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACA,UAAIC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAA9B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCX,QAAAA,UAAU,CAAC,CAAC,GAAGD,YAAJ,EAAiB;AAACc,UAAAA,OAAO,EAACL,SAAS,CAACG,CAAD,CAAT,CAAaG,IAAb,CAAkBC,GAA3B;AAA+BC,UAAAA,OAAO,EAACR,SAAS,CAACG,CAAD,CAAT,CAAaG,IAAb,CAAkBG,GAAzD;AAA6DC,UAAAA,GAAG,EAAC,IAAIC,IAAJ,CAASX,SAAS,CAACG,CAAD,CAAT,CAAaS,EAAtB,EAA0BC,MAA1B;AAAjE,SAAjB,CAAD,CAAV;AAED;AACF,KAXH,EAYGC,KAZH,CAYUC,KAAD,IAAWtB,OAAO,CAACC,GAAR,CAAYqB,KAAZ,CAZpB;AAaD,GAfQ,EAeN,EAfM,CAAT;AAgBA,sBACE;AAAA,cACGxB,YAAY,CAACyB,GAAb,CAAkBN,GAAD,iBAChB;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA,8BACE;AAAA,kBAAMA,GAAG,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAMA,GAAG,CAACL;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMK,GAAG,CAACF;AAAV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUE,GAAG,CAACA,GAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BQrB,a;;KAAAA,a;AA+BT,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Detail from \"../Detail/Detail\";\nimport Clock from \"../../images/clock.svg\";\nimport { RightViewForecast } from \"../Home/CityDTO\";\n\n// export interface RightViewForecast {\n//     minTemp: number;\n//     maxTemp: number;\n//     day: Date;\n//   }\n\nfunction RightForecast(props: any) {\n  const [dailyWeather, setWeather] = useState<RightViewForecast[]>([]);\n  console.log(\"forecast\");\n  useEffect(() => {\n    console.log(\"use effect called\");\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=hourly,minutely,alerts&appid=a9c7a346f3196bdf3072d1b5efdb5a34&units=metric`\n      )\n      .then((response) => {\n        console.log(response);\n        let dailyData = response.data.daily;\n        for (let i = 0; i < dailyData.length; i++) {\n          setWeather([...dailyWeather,{minTemp:dailyData[i].temp.min,maxTemp:dailyData[i].temp.max,day:new Date(dailyData[i].dt).getDay()}]\n          )\n        }\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <div>\n      {dailyWeather.map((day) => (\n        <div key={day.day} className=\"RightCard\">\n          <div>{day.day}</div>\n          <div>{day.minTemp}</div>\n          <div>{day.maxTemp}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default RightForecast;\n"]},"metadata":{},"sourceType":"module"}
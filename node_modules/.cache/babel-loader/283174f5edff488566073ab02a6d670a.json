{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/Detail.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport LeftSideView from \"./LeftSideView\";\nimport \"./LeftSideView.css\"; // import {ReactComponent as Clock} from \"./././images/clock.svg\" ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Detail(props) {\n  _s();\n\n  const [leftSide, setLeft] = useState();\n  const [rightSide, setRight] = useState(); // console.log(props);\n\n  useEffect(() => {\n    console.log(\"use effect called\");\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${props.location.state.city}&appid=e899757c1162bf7b2b2684a0b2b8f5cc&units=metric`).then(response => {\n      let temp = response.data;\n      let tempLeft = {\n        temperature: 0,\n        humidity: 0,\n        timestamp: new Date(),\n        name: \"\",\n        title: \"\"\n      };\n      let tempRight = {\n        minTemp: 0,\n        maxTemp: 0,\n        windSpeed: 0,\n        windDirection: \"\",\n        sunsetTime: \"\",\n        sunriseTime: \"\",\n        humidity: 0\n      };\n      tempLeft.temperature = temp.main.temp;\n      tempLeft.humidity = temp.main.humidity;\n      tempLeft.name = props.location.state.city;\n      tempLeft.title = temp.weather[0].main;\n      tempLeft.timestamp = temp.dt;\n      tempRight.minTemp = temp.main.temp_min;\n      tempRight.maxTemp = temp.main.temp_max;\n      tempRight.humidity = temp.main.humidity;\n      tempRight.windSpeed = temp.wind.speed;\n      tempRight.windDirection = temp.wind.deg;\n      tempRight.sunsetTime = temp.main.humidity;\n      tempRight.sunriseTime = temp.sys.sunset;\n      console.log(tempLeft);\n      console.log(tempRight);\n      setLeft(tempLeft);\n      setLeft(tempRight);\n    }).catch(error => console.log(error));\n  }, []);\n\n  function handleClick(btn) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetailView\",\n    children: [leftSide != null ? /*#__PURE__*/_jsxDEV(LeftSideView, {\n      props: leftSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"todayRight\",\n        onClick: () => handleClick(1),\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"forecastRight\",\n        onClick: () => handleClick(2),\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"historyRight\",\n        onClick: () => handleClick(3),\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Detail, \"NDbxHX4U+H65IFrhGxClHwPDWU4=\");\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Detail/Detail.tsx"],"names":["axios","React","useEffect","useState","LeftSideView","Detail","props","leftSide","setLeft","rightSide","setRight","console","log","get","location","state","city","then","response","temp","data","tempLeft","temperature","humidity","timestamp","Date","name","title","tempRight","minTemp","maxTemp","windSpeed","windDirection","sunsetTime","sunriseTime","main","weather","dt","temp_min","temp_max","wind","speed","deg","sys","sunset","catch","error","handleClick","btn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,oBAAP,C,CACA;;;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBL,QAAQ,EAApC;AACA,QAAM,CAACM,SAAD,EAAYC,QAAZ,IAAwBP,QAAQ,EAAtC,CAF0B,CAG1B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAZ,IAAAA,KAAK,CACFa,GADH,CAEK,oDAAmDP,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqBC,IAAK,sDAFlF,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,UAAIC,IAAI,GAAGD,QAAQ,CAACE,IAApB;AACA,UAAIC,QAAuB,GAAG;AAC5BC,QAAAA,WAAW,EAAE,CADe;AAE5BC,QAAAA,QAAQ,EAAE,CAFkB;AAG5BC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHiB;AAI5BC,QAAAA,IAAI,EAAE,EAJsB;AAK5BC,QAAAA,KAAK,EAAE;AALqB,OAA9B;AAOA,UAAIC,SAAyB,GAAG;AAC9BC,QAAAA,OAAO,EAAE,CADqB;AAE9BC,QAAAA,OAAO,EAAE,CAFqB;AAG9BC,QAAAA,SAAS,EAAE,CAHmB;AAI9BC,QAAAA,aAAa,EAAE,EAJe;AAK9BC,QAAAA,UAAU,EAAE,EALkB;AAM9BC,QAAAA,WAAW,EAAE,EANiB;AAO9BX,QAAAA,QAAQ,EAAE;AAPoB,OAAhC;AASAF,MAAAA,QAAQ,CAACC,WAAT,GAAuBH,IAAI,CAACgB,IAAL,CAAUhB,IAAjC;AACAE,MAAAA,QAAQ,CAACE,QAAT,GAAoBJ,IAAI,CAACgB,IAAL,CAAUZ,QAA9B;AACAF,MAAAA,QAAQ,CAACK,IAAT,GAAgBpB,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqBC,IAArC;AACAK,MAAAA,QAAQ,CAACM,KAAT,GAAiBR,IAAI,CAACiB,OAAL,CAAa,CAAb,EAAgBD,IAAjC;AACAd,MAAAA,QAAQ,CAACG,SAAT,GAAqBL,IAAI,CAACkB,EAA1B;AACAT,MAAAA,SAAS,CAACC,OAAV,GAAkBV,IAAI,CAACgB,IAAL,CAAUG,QAA5B;AACAV,MAAAA,SAAS,CAACE,OAAV,GAAkBX,IAAI,CAACgB,IAAL,CAAUI,QAA5B;AACAX,MAAAA,SAAS,CAACL,QAAV,GAAmBJ,IAAI,CAACgB,IAAL,CAAUZ,QAA7B;AACAK,MAAAA,SAAS,CAACG,SAAV,GAAoBZ,IAAI,CAACqB,IAAL,CAAUC,KAA9B;AACAb,MAAAA,SAAS,CAACI,aAAV,GAAwBb,IAAI,CAACqB,IAAL,CAAUE,GAAlC;AACAd,MAAAA,SAAS,CAACK,UAAV,GAAqBd,IAAI,CAACgB,IAAL,CAAUZ,QAA/B;AACAK,MAAAA,SAAS,CAACM,WAAV,GAAsBf,IAAI,CAACwB,GAAL,CAASC,MAA/B;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ;AACApB,MAAAA,OAAO,CAACa,QAAD,CAAP;AACAb,MAAAA,OAAO,CAACoB,SAAD,CAAP;AACD,KAtCH,EAuCGiB,KAvCH,CAuCUC,KAAD,IAAWnC,OAAO,CAACC,GAAR,CAAYkC,KAAZ,CAvCpB;AAwCD,GA1CQ,EA0CN,EA1CM,CAAT;;AA2CA,WAASC,WAAT,CAAqBC,GAArB,EAAkC,CAAE;;AACpC,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACGzC,QAAQ,IAAI,IAAZ,gBAAmB,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAuD,IAD1D,eAEE;AAAA,8BACE;AAAQ,QAAA,EAAE,EAAC,YAAX;AAAwB,QAAA,OAAO,EAAE,MAAMwC,WAAW,CAAC,CAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,EAAE,EAAC,eAAX;AAA2B,QAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,EAAE,EAAC,cAAX;AAA0B,QAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,CAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhEQ1C,M;;KAAAA,M;AAkET,eAAeA,MAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { City, RightViewToday, LeftViewToday } from \"../Home/CityDTO\";\nimport LeftSideView from \"./LeftSideView\";\nimport \"./LeftSideView.css\";\n// import {ReactComponent as Clock} from \"./././images/clock.svg\" ;\nfunction Detail(props: any) {\n  const [leftSide, setLeft] = useState<LeftViewToday>();\n  const [rightSide, setRight] = useState<RightViewToday>();\n  // console.log(props);\n  useEffect(() => {\n    console.log(\"use effect called\");\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${props.location.state.city}&appid=e899757c1162bf7b2b2684a0b2b8f5cc&units=metric`\n      )\n      .then((response) => {\n        let temp = response.data;\n        let tempLeft: LeftViewToday = {\n          temperature: 0,\n          humidity: 0,\n          timestamp: new Date(),\n          name: \"\",\n          title: \"\",\n        };\n        let tempRight: RightViewToday = {\n          minTemp: 0,\n          maxTemp: 0,\n          windSpeed: 0,\n          windDirection: \"\",\n          sunsetTime: \"\",\n          sunriseTime: \"\",\n          humidity: 0,\n        };\n        tempLeft.temperature = temp.main.temp;\n        tempLeft.humidity = temp.main.humidity;\n        tempLeft.name = props.location.state.city;\n        tempLeft.title = temp.weather[0].main;\n        tempLeft.timestamp = temp.dt;\n        tempRight.minTemp=temp.main.temp_min;\n        tempRight.maxTemp=temp.main.temp_max;\n        tempRight.humidity=temp.main.humidity;\n        tempRight.windSpeed=temp.wind.speed;\n        tempRight.windDirection=temp.wind.deg;\n        tempRight.sunsetTime=temp.main.humidity;\n        tempRight.sunriseTime=temp.sys.sunset;\n        console.log(tempLeft);\n        console.log(tempRight);\n        setLeft(tempLeft);\n        setLeft(tempRight);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  function handleClick(btn: number) {}\n  return (\n    <div className=\"DetailView\">\n      {leftSide != null ? <LeftSideView props={leftSide} /> : null}\n      <div>\n        <button id=\"todayRight\" onClick={() => handleClick(1)}>\n          Today\n        </button>\n        <button id=\"forecastRight\" onClick={() => handleClick(2)}>\n          Forecast\n        </button>\n        <button id=\"historyRight\" onClick={() => handleClick(3)}>\n          History\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}
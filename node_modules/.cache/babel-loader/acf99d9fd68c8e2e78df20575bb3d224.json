{"ast":null,"code":"var _jsxFileName = \"/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Home/HomeLower.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CityCard from \"./CityCard\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomeLower() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const allCities = require(\"indian-cities-json\").cities;\n\n  const [suggestedCities, setSuggestion] = useState([]);\n  useEffect(() => {\n    var filter;\n    console.log(\"Searching for \" + search);\n    filter = search.toUpperCase();\n\n    for (let i = 0; i < allCities.length; i++) {\n      let txtValue = allCities[i].name; // if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      //   allCities[i].style.display = \"\";\n      // } else {\n      //   allCities[i].style.display = \"none\";\n      // }\n    }\n  }, [search, allCities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myDropdown\",\n      className: \"dropdown-content\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myInput\",\n        type: \"text\",\n        placeholder: \"Enter your City Name\",\n        onChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cities.map(city => city != null ? /*#__PURE__*/_jsxDEV(CityCard, {\n        city: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeLower, \"xpf8nCbgn9ZULm2Lo1j3pMYvGdA=\");\n\n_c = HomeLower;\nexport default HomeLower;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeLower\");","map":{"version":3,"sources":["/Users/lalitkumar/Desktop/Hashedin/React Projects/Assignment-ReactTs/weather-app/src/components/Home/HomeLower.tsx"],"names":["React","useState","useEffect","CityCard","HomeLower","cities","setCities","search","setSearch","allCities","require","suggestedCities","setSuggestion","filter","console","log","toUpperCase","i","length","txtValue","name","event","target","value","map","city"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP;;;AAUA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,EAAT,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAS,EAAT,CAApC;;AACA,QAAMQ,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BL,MAAhD;;AACA,QAAM,CAACM,eAAD,EAAiBC,aAAjB,IAAkCX,QAAQ,CAAW,EAAX,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBR,MAA/B;AACAM,IAAAA,MAAM,GAAGN,MAAM,CAACS,WAAP,EAAT;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIE,QAAQ,GAAGV,SAAS,CAACQ,CAAD,CAAT,CAAaG,IAA5B,CADyC,CAEzC;AACA;AACA;AACA;AACA;AACD;AACF,GAZQ,EAYN,CAACb,MAAD,EAASE,SAAT,CAZM,CAAT;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,sBAHd;AAIE,QAAA,QAAQ,EAAGY,KAAD,IAAWb,SAAS,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA,gBACGlB,MAAM,CAACmB,GAAP,CAAYC,IAAD,IACVA,IAAI,IAAI,IAAR,gBAAe,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAf,GAAmD,IADpD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApCQrB,S;;KAAAA,S;AAsCT,eAAeA,SAAf","sourcesContent":["import { type } from \"node:os\";\nimport React, { useState, useEffect } from \"react\";\nimport CityCard from \"./CityCard\";\nimport \"./Home.css\";\nexport interface City {\n  name: string;\n  longitude: number;\n  latitude: number;\n  temperature: number;\n  title: string;\n  timestamp: Date;\n}\n\nfunction HomeLower() {\n  const [cities, setCities] = useState<City[]>([]);\n  const [search, setSearch] = useState<string>(\"\");\n  const allCities = require(\"indian-cities-json\").cities;\n  const [suggestedCities,setSuggestion] = useState<string[]>([]);\n  useEffect(() => {\n    var filter: string;\n    console.log(\"Searching for \" + search);\n    filter = search.toUpperCase();\n    for (let i = 0; i < allCities.length; i++) {\n      let txtValue = allCities[i].name;\n      // if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      //   allCities[i].style.display = \"\";\n      // } else {\n      //   allCities[i].style.display = \"none\";\n      // }\n    }\n  }, [search, allCities]);\n  return (\n    <div>\n      <h2>Weather App</h2>\n      <div id=\"myDropdown\" className=\"dropdown-content\">\n        <input\n          id=\"myInput\"\n          type=\"text\"\n          placeholder=\"Enter your City Name\"\n          onChange={(event) => setSearch(event.target.value)}\n        />\n      </div>\n      <div>\n        {cities.map((city: City) =>\n          city != null ? <CityCard city={city}></CityCard> : null\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default HomeLower;\n"]},"metadata":{},"sourceType":"module"}